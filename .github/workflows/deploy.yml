name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit --no-fund
          npm ls --depth=0

      - name: Lint code
        run: npm run lint
        continue-on-error: true

      - name: Build application
        run: |
          npm run build
          ls -la dist/

      - name: Upload build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          timeout: 600000
          error_count: 10
          reporting_interval: 5000
          
  health-check:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Wait for deployment
        run: sleep 30
        
      - name: Health check
        run: |
          SITE_URL="${{ steps.deployment.outputs.page_url || format('https://{0}.github.io/{1}/', github.repository_owner, github.event.repository.name) }}"
          echo "Checking site: $SITE_URL"
          
          # Проверка доступности сайта
          for i in {1..5}; do
            if curl -sSf "$SITE_URL" > /dev/null; then
              echo "✅ Site is accessible"
              break
            else
              echo "❌ Attempt $i failed, retrying in 10 seconds..."
              sleep 10
            fi
            
            if [ $i -eq 5 ]; then
              echo "❌ Site health check failed after 5 attempts"
              exit 1
            fi
          done
          
          # Проверка времени загрузки
          LOAD_TIME=$(curl -o /dev/null -s -w '%{time_total}' "$SITE_URL")
          echo "⏱️ Page load time: ${LOAD_TIME}s"
          
          if (( $(echo "$LOAD_TIME > 5.0" | bc -l) )); then
            echo "⚠️ Warning: Page load time is over 5 seconds"
          else
            echo "✅ Page load time is acceptable"
          fi